name: "Build Deploy AKS-WTE"

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  workflow_dispatch:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'

env:
  CONTAINER_REGISTRY_LOGIN_SERVER: ${{ secrets.registry_wte }}.azurecr.io
  PROJECT_FILE: src/WeatherClusterAPI/WeatherClusterAPI.csproj
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v3
      - name: Log in to container registry
        uses: azure/docker-login@v1
        with:
            login-server: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.mysuperfunservice2_USERNAME_BF2C }}
            password: ${{ secrets.mysuperfunservice2_PASSWORD_BF2C }}
      
      - name: Build and push container image to registry
        run: dotnet publish ${{ env.PROJECT_FILE }} -c Release -r linux-x64 -p:PublishProfile=DefaultContainer -p:ContainerImageTag=${{ github.sha }} --no-self-contained -p:ContainerRegistry=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} -bl -p:UseAppHost=false

      - name: Upload binlog for investigation
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: binlog
          path: msbuild.binlog
        
      - name: Azure login
        id: login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ secrets.cluster_name }}'
          
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
             appmanifest.yaml
          images: '${{ secrets.registry_wte }}.azurecr.io/${{ secrets.repository }}:${{ github.sha }}'
          pull-images: false